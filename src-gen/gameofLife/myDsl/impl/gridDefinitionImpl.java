/**
 * generated by Xtext 2.36.0
 */
package gameofLife.myDsl.impl;

import gameofLife.myDsl.CellCoord;
import gameofLife.myDsl.MyDslPackage;
import gameofLife.myDsl.gridDefinition;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>grid Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gameofLife.myDsl.impl.gridDefinitionImpl#getWidth <em>Width</em>}</li>
 *   <li>{@link gameofLife.myDsl.impl.gridDefinitionImpl#getHeight <em>Height</em>}</li>
 *   <li>{@link gameofLife.myDsl.impl.gridDefinitionImpl#getAliveCells <em>Alive Cells</em>}</li>
 * </ul>
 *
 * @generated
 */
public class gridDefinitionImpl extends MinimalEObjectImpl.Container implements gridDefinition
{
  /**
   * The default value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected static final int WIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected int width = WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getHeight() <em>Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeight()
   * @generated
   * @ordered
   */
  protected static final int HEIGHT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getHeight() <em>Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeight()
   * @generated
   * @ordered
   */
  protected int height = HEIGHT_EDEFAULT;

  /**
   * The cached value of the '{@link #getAliveCells() <em>Alive Cells</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAliveCells()
   * @generated
   * @ordered
   */
  protected EList<CellCoord> aliveCells;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected gridDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.GRID_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getWidth()
  {
    return width;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWidth(int newWidth)
  {
    int oldWidth = width;
    width = newWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.GRID_DEFINITION__WIDTH, oldWidth, width));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getHeight()
  {
    return height;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHeight(int newHeight)
  {
    int oldHeight = height;
    height = newHeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.GRID_DEFINITION__HEIGHT, oldHeight, height));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CellCoord> getAliveCells()
  {
    if (aliveCells == null)
    {
      aliveCells = new EObjectContainmentEList<CellCoord>(CellCoord.class, this, MyDslPackage.GRID_DEFINITION__ALIVE_CELLS);
    }
    return aliveCells;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.GRID_DEFINITION__ALIVE_CELLS:
        return ((InternalEList<?>)getAliveCells()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.GRID_DEFINITION__WIDTH:
        return getWidth();
      case MyDslPackage.GRID_DEFINITION__HEIGHT:
        return getHeight();
      case MyDslPackage.GRID_DEFINITION__ALIVE_CELLS:
        return getAliveCells();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.GRID_DEFINITION__WIDTH:
        setWidth((Integer)newValue);
        return;
      case MyDslPackage.GRID_DEFINITION__HEIGHT:
        setHeight((Integer)newValue);
        return;
      case MyDslPackage.GRID_DEFINITION__ALIVE_CELLS:
        getAliveCells().clear();
        getAliveCells().addAll((Collection<? extends CellCoord>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.GRID_DEFINITION__WIDTH:
        setWidth(WIDTH_EDEFAULT);
        return;
      case MyDslPackage.GRID_DEFINITION__HEIGHT:
        setHeight(HEIGHT_EDEFAULT);
        return;
      case MyDslPackage.GRID_DEFINITION__ALIVE_CELLS:
        getAliveCells().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.GRID_DEFINITION__WIDTH:
        return width != WIDTH_EDEFAULT;
      case MyDslPackage.GRID_DEFINITION__HEIGHT:
        return height != HEIGHT_EDEFAULT;
      case MyDslPackage.GRID_DEFINITION__ALIVE_CELLS:
        return aliveCells != null && !aliveCells.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (width: ");
    result.append(width);
    result.append(", height: ");
    result.append(height);
    result.append(')');
    return result.toString();
  }

} //gridDefinitionImpl
