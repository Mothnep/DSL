/**
 * generated by Xtext 2.36.0
 */
package gameofLife.myDsl.impl;

import gameofLife.myDsl.DeadToAliveRule;
import gameofLife.myDsl.LiveToAliveRule;
import gameofLife.myDsl.LiveToDeadRule;
import gameofLife.myDsl.MyDslPackage;
import gameofLife.myDsl.rulesDefinition;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>rules Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gameofLife.myDsl.impl.rulesDefinitionImpl#getLiveToDead <em>Live To Dead</em>}</li>
 *   <li>{@link gameofLife.myDsl.impl.rulesDefinitionImpl#getLiveToAlive <em>Live To Alive</em>}</li>
 *   <li>{@link gameofLife.myDsl.impl.rulesDefinitionImpl#getDeadToAlive <em>Dead To Alive</em>}</li>
 * </ul>
 *
 * @generated
 */
public class rulesDefinitionImpl extends MinimalEObjectImpl.Container implements rulesDefinition
{
  /**
   * The cached value of the '{@link #getLiveToDead() <em>Live To Dead</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLiveToDead()
   * @generated
   * @ordered
   */
  protected EList<LiveToDeadRule> liveToDead;

  /**
   * The cached value of the '{@link #getLiveToAlive() <em>Live To Alive</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLiveToAlive()
   * @generated
   * @ordered
   */
  protected EList<LiveToAliveRule> liveToAlive;

  /**
   * The cached value of the '{@link #getDeadToAlive() <em>Dead To Alive</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeadToAlive()
   * @generated
   * @ordered
   */
  protected EList<DeadToAliveRule> deadToAlive;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected rulesDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.RULES_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LiveToDeadRule> getLiveToDead()
  {
    if (liveToDead == null)
    {
      liveToDead = new EObjectContainmentEList<LiveToDeadRule>(LiveToDeadRule.class, this, MyDslPackage.RULES_DEFINITION__LIVE_TO_DEAD);
    }
    return liveToDead;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LiveToAliveRule> getLiveToAlive()
  {
    if (liveToAlive == null)
    {
      liveToAlive = new EObjectContainmentEList<LiveToAliveRule>(LiveToAliveRule.class, this, MyDslPackage.RULES_DEFINITION__LIVE_TO_ALIVE);
    }
    return liveToAlive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DeadToAliveRule> getDeadToAlive()
  {
    if (deadToAlive == null)
    {
      deadToAlive = new EObjectContainmentEList<DeadToAliveRule>(DeadToAliveRule.class, this, MyDslPackage.RULES_DEFINITION__DEAD_TO_ALIVE);
    }
    return deadToAlive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_DEAD:
        return ((InternalEList<?>)getLiveToDead()).basicRemove(otherEnd, msgs);
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_ALIVE:
        return ((InternalEList<?>)getLiveToAlive()).basicRemove(otherEnd, msgs);
      case MyDslPackage.RULES_DEFINITION__DEAD_TO_ALIVE:
        return ((InternalEList<?>)getDeadToAlive()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_DEAD:
        return getLiveToDead();
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_ALIVE:
        return getLiveToAlive();
      case MyDslPackage.RULES_DEFINITION__DEAD_TO_ALIVE:
        return getDeadToAlive();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_DEAD:
        getLiveToDead().clear();
        getLiveToDead().addAll((Collection<? extends LiveToDeadRule>)newValue);
        return;
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_ALIVE:
        getLiveToAlive().clear();
        getLiveToAlive().addAll((Collection<? extends LiveToAliveRule>)newValue);
        return;
      case MyDslPackage.RULES_DEFINITION__DEAD_TO_ALIVE:
        getDeadToAlive().clear();
        getDeadToAlive().addAll((Collection<? extends DeadToAliveRule>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_DEAD:
        getLiveToDead().clear();
        return;
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_ALIVE:
        getLiveToAlive().clear();
        return;
      case MyDslPackage.RULES_DEFINITION__DEAD_TO_ALIVE:
        getDeadToAlive().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_DEAD:
        return liveToDead != null && !liveToDead.isEmpty();
      case MyDslPackage.RULES_DEFINITION__LIVE_TO_ALIVE:
        return liveToAlive != null && !liveToAlive.isEmpty();
      case MyDslPackage.RULES_DEFINITION__DEAD_TO_ALIVE:
        return deadToAlive != null && !deadToAlive.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //rulesDefinitionImpl
